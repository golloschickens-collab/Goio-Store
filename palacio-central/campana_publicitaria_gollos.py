#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üéØ CAMPA√ëA PUBLICITARIA FACEBOOK GOLLOS CHICKENS
================================================
Publicidad pagada hiperlocalizada desde Los N√≠speros
Radio configurable + targeting inteligente
"""

import json
from datetime import datetime, timedelta

class CampanaPublicitariaGollos:
    def __init__(self):
        self.ubicacion_central = {
            "direccion": "Asociaci√≥n Los N√≠speros Mz.V Lte.1",
            "distrito": "San Mart√≠n de Porres",
            "referencia": "Paradero Las Vaquitas",
            "coordenadas": "aprox -11.99, -77.08"  # Estimadas para San Mart√≠n
        }
        
        self.opciones_radio = {
            "conservador": {"km": 5, "descripcion": "Zona segura delivery", "audiencia_estimada": "15,000-25,000"},
            "moderado": {"km": 8, "descripcion": "Expansi√≥n controlada", "audiencia_estimada": "35,000-50,000"},
            "agresivo": {"km": 12, "descripcion": "M√°ximo alcance", "audiencia_estimada": "70,000-100,000"}
        }

    def crear_posts_publicitarios(self):
        """Posts optimizados para publicidad pagada"""
        
        posts_ads = {
            "post_1_presentacion": {
                "titulo": "üèÜ 16 A√ëOS CONQUISTANDO LIMA NORTE - ¬°AHORA M√ÅS CERCA!",
                "copy_publicitario": """üêî ¬øConoces GOLLOS CHICKENS Los N√≠speros?

‚ú® 16 a√±os perfeccionando nuestro sabor
üìç Asociaci√≥n Los N√≠speros - Paradero Las Vaquitas  
üöö Delivery R√ÅPIDO a tu zona (25-35 min)

üéØ ESPECIALISTAS EN:
‚Ä¢ Pechuga Broaster Premium S/16
‚Ä¢ Combo Familiar 8 piezas S/55
‚Ä¢ Alitas crujientes S/20

üí∞ DELIVERY GRATIS en pedidos +S/30
üì± Pedidos por WhatsApp ‚¨áÔ∏è""",
                "cta": "Pide Ahora",
                "objetivo_facebook": "TRAFFIC",
                "presupuesto_sugerido": "S/15-25/d√≠a",
                "duracion": "3 d√≠as"
            },
            
            "post_2_delivery": {
                "titulo": "üöö ¬øLLEGAMOS A TU ZONA? - DELIVERY DESDE LOS N√çSPEROS",
                "copy_publicitario": """üìç CONSULTA SI LLEGAMOS A TU DIRECCI√ìN

üè† Desde: Los N√≠speros Mz.V Lte.1
üéØ Radio de delivery en expansi√≥n
‚è∞ 25-35 minutos garantizado

‚úÖ ZONAS CONFIRMADAS:
‚Ä¢ Los N√≠speros y alrededores
‚Ä¢ Paradero Las Vaquitas zona
‚Ä¢ [Consulta otras √°reas]

üí¨ ¬øTU ZONA NO APARECE?
¬°Escr√≠benos! Evaluamos nuevas √°reas
seg√∫n la demanda üìà

üöö GRATIS +S/30 | üì± WhatsApp ‚¨áÔ∏è""",
                "cta": "Consultar Zona",
                "objetivo_facebook": "MESSAGES",
                "presupuesto_sugerido": "S/20-30/d√≠a",
                "duracion": "5 d√≠as",
                "objetivo_datos": "MAPEAR DEMANDA POR ZONAS"
            },
            
            "post_3_carta": {
                "titulo": "üìã CARTA COMPLETA - PRECIOS QUE TE SORPRENDER√ÅN",
                "copy_publicitario": """üçó CARTA GOLLOS CHICKENS 2025

üëë COMBOS ESTRELLA:
üî• Combo Familiar (8 piezas): S/55
üî• Combo Doble Alitas: S/30

üéØ ESPECIALIDADES:
‚Ä¢ Pechuga Broaster Premium: S/16
‚Ä¢ Alitas Especiales (6u): S/20  
‚Ä¢ Hamburguesa Especial: S/16
‚Ä¢ Salchipapa a la Pobre: S/18

üí∞ Precios honestos para familias
üöö Delivery GRATIS +S/30
üìç 16 a√±os de experiencia

üì± Pide por WhatsApp ‚¨áÔ∏è""",
                "cta": "Ver Carta Completa",
                "objetivo_facebook": "CONVERSIONS",
                "presupuesto_sugerido": "S/25-35/d√≠a",
                "duracion": "7 d√≠as"
            },
            
            "post_4_oferta": {
                "titulo": "üî• OFERTA ESPECIAL - COMBO FAMILIAR S/55",
                "copy_publicitario": """üéâ PROMOCI√ìN FACEBOOK GOLLOS CHICKENS

üçó COMBO FAMILIAR COMPLETO:
‚úÖ 8 piezas de pollo broaster
‚úÖ Papas familiares  
‚úÖ Gaseosa 1.5L
‚úÖ Salsas incluidas

üí• TODO POR SOLO S/55
üöö + DELIVERY GRATIS

üìç Desde Los N√≠speros para tu hogar
‚è∞ 25-35 minutos garantizado
üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Perfecto para toda la familia

¬°OFERTA LIMITADA! üì± WhatsApp ‚¨áÔ∏è""",
                "cta": "Pedir Combo",
                "objetivo_facebook": "CONVERSIONS",
                "presupuesto_sugerido": "S/30-40/d√≠a", 
                "duracion": "4 d√≠as",
                "urgencia": "OFERTA LIMITADA"
            }
        }
        
        return posts_ads

    def configurar_targeting_geografico(self, radio_km):
        """Configurar targeting geogr√°fico espec√≠fico"""
        
        targeting_config = {
            "ubicacion_central": {
                "latitud": -11.99,  # Estimada Los N√≠speros
                "longitud": -77.08,
                "nombre": "Asociaci√≥n Los N√≠speros, San Mart√≠n de Porres"
            },
            
            "radio_targeting": {
                "radio_km": radio_km,
                "tipo": "RADIUS",
                "incluir_areas": [
                    "San Mart√≠n de Porres",
                    "Los Olivos",
                    "Independencia", 
                    "Comas (parcial)"
                ]
            },
            
            "demografico": {
                "edad_minima": 25,
                "edad_maxima": 55,
                "genero": "ALL",
                "idiomas": ["Spanish"]
            },
            
            "intereses": [
                "Food delivery",
                "Fried chicken", 
                "Family restaurants",
                "Local business",
                "Fast food"
            ],
            
            "comportamientos": [
                "Frequent online shoppers",
                "Mobile device users",
                "Family-focused consumers"
            ],
            
            "exclusiones": {
                "zonas_lejanas": "Excluir >15km de Lima Centro",
                "demografico": "Menores de 18 a√±os"
            }
        }
        
        return targeting_config

    def calcular_presupuestos(self, radio_km, duracion_dias):
        """Calcular presupuestos seg√∫n radio y duraci√≥n"""
        
        # Factores de costo seg√∫n radio
        factor_radio = {
            5: 1.0,    # Zona base
            8: 1.3,    # 30% m√°s audiencia
            12: 1.6    # 60% m√°s audiencia  
        }
        
        # Presupuesto base por post
        presupuesto_base = {
            "presentacion": 20,
            "delivery_consulta": 25, 
            "carta_completa": 30,
            "oferta_especial": 35
        }
        
        factor = factor_radio.get(radio_km, 1.3)
        
        presupuestos = {}
        total_campana = 0
        
        for tipo, base in presupuesto_base.items():
            presupuesto_diario = base * factor
            presupuesto_total = presupuesto_diario * duracion_dias
            
            presupuestos[tipo] = {
                "diario": f"S/{presupuesto_diario:.0f}",
                "total": f"S/{presupuesto_total:.0f}",
                "duracion": f"{duracion_dias} d√≠as"
            }
            
            total_campana += presupuesto_total
        
        presupuestos["total_campana"] = f"S/{total_campana:.0f}"
        presupuestos["costo_por_km"] = f"S/{total_campana/radio_km:.0f} por km"
        
        return presupuestos

    def generar_cronograma_publicacion(self):
        """Generar cronograma optimizado de publicaci√≥n"""
        
        cronograma = {
            "semana_1": {
                "lunes": "POST 1: Presentaci√≥n (Lanzamiento)",
                "martes": "POST 1: Contin√∫a",
                "miercoles": "POST 1: Finaliza + POST 2: Delivery inicia",
                "jueves": "POST 2: Delivery contin√∫a",
                "viernes": "POST 2: Delivery contin√∫a", 
                "sabado": "POST 2: Delivery contin√∫a + POST 3: Carta inicia",
                "domingo": "POST 2: Finaliza + POST 3: Carta contin√∫a"
            },
            
            "semana_2": {
                "lunes": "POST 3: Carta contin√∫a",
                "martes": "POST 3: Carta contin√∫a", 
                "miercoles": "POST 3: Carta contin√∫a + POST 4: Oferta inicia",
                "jueves": "POST 3: Carta contin√∫a + POST 4: Oferta contin√∫a",
                "viernes": "POST 3: Carta contin√∫a + POST 4: Oferta contin√∫a",
                "sabado": "POST 3: Finaliza + POST 4: Oferta contin√∫a", 
                "domingo": "POST 4: Oferta finaliza"
            }
        }
        
        return cronograma

    def configurar_metricas_seguimiento(self):
        """Configurar m√©tricas para seguimiento de campa√±a"""
        
        metricas = {
            "facebook_ads": {
                "alcance": "Personas √∫nicas alcanzadas por zona",
                "impresiones": "Total visualizaciones",
                "ctr": "Click Through Rate (objetivo >2%)",
                "cpc": "Costo por click (objetivo <S/2)",
                "conversiones": "Clicks a WhatsApp"
            },
            
            "whatsapp_tracking": {
                "mensajes_nuevos": "Consultas desde Facebook",
                "consultas_zona": "Ubicaciones que preguntan delivery",
                "conversiones": "Consultas que se vuelven pedidos",
                "zonas_demanda": "√Åreas con m√°s consultas"
            },
            
            "analisis_expansion": {
                "zonas_alta_demanda": "√Åreas con >10 consultas/semana",
                "zonas_conversion": "√Åreas con >30% conversi√≥n consulta‚Üípedido",
                "horarios_pico": "Cu√°ndo llegan m√°s mensajes",
                "productos_populares": "Qu√© m√°s preguntan por zona"
            },
            
            "roi_campana": {
                "inversion_total": "Presupuesto gastado",
                "pedidos_generados": "Ventas directas de Facebook",
                "ticket_promedio": "Valor promedio por pedido",
                "roi_porcentaje": "Retorno sobre inversi√≥n"
            }
        }
        
        return metricas

def main():
    """Funci√≥n principal - Configurar campa√±a publicitaria"""
    print("üéØ CAMPA√ëA PUBLICITARIA GOLLOS CHICKENS")
    print("=" * 50)
    print("üìç Publicidad pagada hiperlocalizada desde Los N√≠speros")
    
    campana = CampanaPublicitariaGollos()
    
    # Mostrar opciones de radio
    print(f"\nüéØ OPCIONES DE RADIO DE TARGETING:")
    print("=" * 40)
    
    for tipo, config in campana.opciones_radio.items():
        print(f"\nüìä {tipo.upper()}:")
        print(f"   üìè Radio: {config['km']} km")
        print(f"   üéØ {config['descripcion']}")
        print(f"   üë• Audiencia: {config['audiencia_estimada']}")
    
    # Recomendaci√≥n
    print(f"\nüí° RECOMENDACI√ìN INICIAL:")
    print("üéØ Empezar con MODERADO (8km) por 2 semanas")
    print("üìä Analizar resultados y ajustar")
    
    # Posts publicitarios
    posts = campana.crear_posts_publicitarios()
    
    print(f"\nüì± POSTS PUBLICITARIOS:")
    print("=" * 30)
    
    for i, (key, post) in enumerate(posts.items(), 1):
        print(f"\n{i}. {post['titulo']}")
        print(f"   üéØ Objetivo: {post['objetivo_facebook']}")
        print(f"   üí∞ Presupuesto: {post['presupuesto_sugerido']}")
        print(f"   ‚è∞ Duraci√≥n: {post['duracion']}")
    
    # Presupuestos por radio
    radio_recomendado = 8  # km
    duracion_recomendada = 5  # d√≠as promedio
    
    presupuestos = campana.calcular_presupuestos(radio_recomendado, duracion_recomendada)
    
    print(f"\nüí∞ PRESUPUESTOS (Radio {radio_recomendado}km):")
    print("=" * 35)
    
    for tipo, presu in presupuestos.items():
        if tipo != "total_campana" and tipo != "costo_por_km":
            print(f"üìä {tipo}: {presu['diario']}/d√≠a √ó {presu['duracion']} = {presu['total']}")
    
    print(f"\nüèÜ TOTAL CAMPA√ëA: {presupuestos['total_campana']}")
    print(f"üìè {presupuestos['costo_por_km']}")
    
    # Cronograma
    cronograma = campana.generar_cronograma_publicacion()
    
    print(f"\nüìÖ CRONOGRAMA RECOMENDADO:")
    print("=" * 30)
    print("üöÄ SEMANA 1: Presentaci√≥n + Mapeo zonas")
    print("üìä SEMANA 2: Carta + Ofertas")
    
    # M√©tricas de seguimiento
    metricas = campana.configurar_metricas_seguimiento()
    
    print(f"\nüìà M√âTRICAS CLAVE A TRACKEAR:")
    print("=" * 35)
    print("üì± Facebook: Alcance, CTR, CPC")
    print("üí¨ WhatsApp: Consultas por zona")
    print("üí∞ ROI: Conversi√≥n consulta‚Üípedido")
    print("üó∫Ô∏è Expansi√≥n: Zonas alta demanda")
    
    print(f"\nüéØ ¬øLISTO PARA LANZAR LA CAMPA√ëA REY?")
    print("üí∞ Inversi√≥n recomendada: S/400-600 total")
    print("üéØ ROI esperado: 200-300% en 30 d√≠as")
    print("üìä Datos valiosos para expansi√≥n futura")

if __name__ == "__main__":
    main()