# üöÄ EJECUTAR AGENTES ELITE - WINDOWS

Write-Host "================================================================================" -ForegroundColor Cyan
Write-Host "üèÜ AGENTES ELITE - GOIO STORE" -ForegroundColor Yellow
Write-Host "================================================================================" -ForegroundColor Cyan
Write-Host ""

# Verificar que estamos en el directorio correcto
$expectedPath = "C:\Goio mayordomo\palacio-central"
$currentPath = (Get-Location).Path

if ($currentPath -ne $expectedPath) {
    Write-Host "üìÅ Cambiando a directorio correcto..." -ForegroundColor Yellow
    Set-Location $expectedPath
}

Write-Host "‚úÖ Directorio: $expectedPath" -ForegroundColor Green
Write-Host ""

# Verificar .env
if (Test-Path ".env") {
    Write-Host "‚úÖ Archivo .env encontrado" -ForegroundColor Green
    
    $envContent = Get-Content ".env" -Raw
    if ($envContent -match "SHOPIFY_STORE_URL" -and $envContent -match "GEMINI_API_KEY") {
        Write-Host "‚úÖ Credenciales configuradas" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Faltan credenciales en .env" -ForegroundColor Red
        Write-Host "   Edita .env y agrega SHOPIFY_STORE_URL y GEMINI_API_KEY" -ForegroundColor Yellow
        exit 1
    }
} else {
    Write-Host "‚ùå Archivo .env no encontrado" -ForegroundColor Red
    Write-Host "   Ejecuta: Copy-Item '.env.example' '.env'" -ForegroundColor Yellow
    exit 1
}

Write-Host ""
Write-Host "================================================================================" -ForegroundColor Cyan
Write-Host "Selecciona el agente a ejecutar:" -ForegroundColor Cyan
Write-Host "================================================================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "1. üîç AUDITOR√çA COMPLETA (solo analiza, no modifica)" -ForegroundColor White
Write-Host "   ‚îî‚îÄ Genera score 0-100 y plan de acci√≥n" -ForegroundColor Gray
Write-Host ""
Write-Host "2. ‚úçÔ∏è  OPTIMIZAR DESCRIPCIONES (con IA)" -ForegroundColor White
Write-Host "   ‚îî‚îÄ Reescribe descripciones para vender m√°s" -ForegroundColor Gray
Write-Host ""
Write-Host "3. üì∏ OPTIMIZAR IM√ÅGENES (genera ALT text)" -ForegroundColor White
Write-Host "   ‚îî‚îÄ Mejora SEO con descripciones autom√°ticas" -ForegroundColor Gray
Write-Host ""
Write-Host "4. üõ°Ô∏è  CONSTRUIR CONFIANZA (pol√≠ticas y trust)" -ForegroundColor White
Write-Host "   ‚îî‚îÄ Genera pol√≠ticas legales y elementos de confianza" -ForegroundColor Gray
Write-Host ""
Write-Host "5. üî• FIX COMPLETO AUTOM√ÅTICO (TODO)" -ForegroundColor Yellow
Write-Host "   ‚îî‚îÄ Ejecuta los 4 agentes en secuencia (8-10 min)" -ForegroundColor Gray
Write-Host ""
Write-Host "0. Salir" -ForegroundColor White
Write-Host ""

$opcion = Read-Host "Selecciona una opci√≥n [1-5]"

Write-Host ""
Write-Host "================================================================================" -ForegroundColor Cyan

switch ($opcion) {
    "1" {
        Write-Host "üîç Ejecutando AUDITOR√çA COMPLETA..." -ForegroundColor Cyan
        Write-Host "‚è±Ô∏è  Tiempo estimado: 2-3 minutos" -ForegroundColor Yellow
        Write-Host ""
        node agents/store-perfection-master.js
    }
    "2" {
        Write-Host "‚úçÔ∏è  Optimizando DESCRIPCIONES con IA..." -ForegroundColor Cyan
        Write-Host "‚è±Ô∏è  Tiempo estimado: 3-5 minutos" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "‚ö†Ô∏è  Modo AUTO-FIX: Actualizar√° productos en Shopify" -ForegroundColor Red
        $confirmar = Read-Host "¬øContinuar? [S/n]"
        if ($confirmar -eq "" -or $confirmar -match "^[Ss]$") {
            node agents/product-description-writer.js --auto-fix
        } else {
            Write-Host "‚ùå Cancelado" -ForegroundColor Yellow
        }
    }
    "3" {
        Write-Host "üì∏ Optimizando IM√ÅGENES..." -ForegroundColor Cyan
        Write-Host "‚è±Ô∏è  Tiempo estimado: 2-3 minutos" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "‚ö†Ô∏è  Modo AUTO-FIX: Generar√° ALT text autom√°tico" -ForegroundColor Red
        $confirmar = Read-Host "¬øContinuar? [S/n]"
        if ($confirmar -eq "" -or $confirmar -match "^[Ss]$") {
            node agents/image-optimizer.js --auto-fix
        } else {
            Write-Host "‚ùå Cancelado" -ForegroundColor Yellow
        }
    }
    "4" {
        Write-Host "üõ°Ô∏è  Construyendo CONFIANZA..." -ForegroundColor Cyan
        Write-Host "‚è±Ô∏è  Tiempo estimado: 3-4 minutos" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "‚ö†Ô∏è  Modo AUTO-GENERATE: Crear√° pol√≠ticas legales" -ForegroundColor Red
        $confirmar = Read-Host "¬øContinuar? [S/n]"
        if ($confirmar -eq "" -or $confirmar -match "^[Ss]$") {
            node agents/trust-builder.js --auto-generate
        } else {
            Write-Host "‚ùå Cancelado" -ForegroundColor Yellow
        }
    }
    "5" {
        Write-Host "üî• MODO AGRESIVO: FIX COMPLETO AUTOM√ÅTICO" -ForegroundColor Red
        Write-Host "‚è±Ô∏è  Tiempo estimado: 8-10 minutos" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "Esto ejecutar√°:" -ForegroundColor White
        Write-Host "  1. Auditor√≠a inicial" -ForegroundColor Gray
        Write-Host "  2. Optimizar descripciones (AUTO-FIX)" -ForegroundColor Gray
        Write-Host "  3. Optimizar im√°genes (AUTO-FIX)" -ForegroundColor Gray
        Write-Host "  4. Construir confianza (AUTO-GENERATE)" -ForegroundColor Gray
        Write-Host "  5. Auditor√≠a final" -ForegroundColor Gray
        Write-Host ""
        Write-Host "‚ö†Ô∏è  Aplicar√° cambios sin confirmaci√≥n" -ForegroundColor Red
        $confirmar = Read-Host "¬øEst√°s seguro? [S/n]"
        if ($confirmar -eq "" -or $confirmar -match "^[Ss]$") {
            node agents/store-auto-fixer.js
        } else {
            Write-Host "‚ùå Cancelado" -ForegroundColor Yellow
        }
    }
    "0" {
        Write-Host "üëã Hasta luego" -ForegroundColor Cyan
        exit 0
    }
    default {
        Write-Host "‚ùå Opci√≥n inv√°lida" -ForegroundColor Red
        exit 1
    }
}

Write-Host ""
Write-Host "================================================================================" -ForegroundColor Cyan
Write-Host "‚úÖ EJECUCI√ìN COMPLETADA" -ForegroundColor Green
Write-Host "================================================================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìÅ Reportes guardados en: reports/" -ForegroundColor Yellow
Write-Host ""

# Preguntar si quiere ver el reporte
$verReporte = Read-Host "¬øVer √∫ltimo reporte? [S/n]"
if ($verReporte -eq "" -or $verReporte -match "^[Ss]$") {
    $ultimoReporte = Get-ChildItem -Path "reports" -Recurse -Filter "*.md" | Sort-Object LastWriteTime -Descending | Select-Object -First 1
    if ($ultimoReporte) {
        Write-Host ""
        Write-Host "üìÑ Abriendo: $($ultimoReporte.FullName)" -ForegroundColor Cyan
        code $ultimoReporte.FullName
    } else {
        Write-Host "‚ö†Ô∏è  No se encontraron reportes" -ForegroundColor Yellow
    }
}
