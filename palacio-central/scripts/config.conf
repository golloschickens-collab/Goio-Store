# =============================================================================
# CONFIGURACIÓN DEL SISTEMA DE MÉTRICAS
# =============================================================================
# 
# Este archivo contiene todas las configuraciones del sistema de métricas.
# Edita los valores según tus necesidades específicas.
#
# =============================================================================

# -----------------------------------------------------------------------------
# CONFIGURACIÓN DE SERVIDORES
# -----------------------------------------------------------------------------

# Lista de servidores objetivo con sus delays de ejecución
# Formato: "IP:HOSTNAME:DELAY"
METRIC_SERVERS=(
    "157.180.83.237:ai-masterkernel:2m"
    "78.156.195.120:goio-store:5m"
    "91.98.36.86:eco-eterno:7m"  
    "91.98.114.207:gollos-server-1:9m"
)

# Configuración SSH por defecto
DEFAULT_SSH_USER="root"
DEFAULT_SSH_PORT="22"
DEFAULT_SSH_KEY="~/.ssh/metrics_deploy_key"

# Timeout para conexiones SSH (segundos)
SSH_TIMEOUT="10"

# Opciones adicionales de SSH
SSH_EXTRA_OPTS="-o BatchMode=yes -o StrictHostKeyChecking=accept-new"

# -----------------------------------------------------------------------------
# CONFIGURACIÓN DE PATHS Y ARCHIVOS
# -----------------------------------------------------------------------------

# Directorio base en los servidores remotos
REMOTE_BASE_DIR="/usr/local/bin"

# Directorio de logs en los servidores remotos
REMOTE_LOG_DIR="/var/log/goio-metrics"

# Archivos a desplegar
COLLECTOR_SCRIPT="collect_metrics.sh"
SYSTEMD_SERVICE="systemd/goio-metrics.service"
SYSTEMD_TIMER="systemd/goio-metrics.timer"

# Parser de métricas (opcional)
METRICS_PARSER="parse_metrics.py"

# -----------------------------------------------------------------------------
# CONFIGURACIÓN DE SYSTEMD
# -----------------------------------------------------------------------------

# Configuración del timer
TIMER_FREQUENCY="hourly"           # hourly, daily, weekly
TIMER_RANDOMIZED_DELAY="5m"        # Delay aleatorio base
TIMER_PERSISTENT="true"            # Recuperar ejecuciones perdidas

# Configuración del servicio
SERVICE_NICE_LEVEL="10"            # Prioridad baja CPU (0-19)
SERVICE_IO_CLASS="best-effort"     # Clase de I/O
SERVICE_IO_PRIORITY="7"            # Prioridad I/O (0-7)

# Hardening de seguridad para el servicio
ENABLE_SECURITY_HARDENING="true"
PROTECT_SYSTEM="full"
PROTECT_HOME="yes"
NO_NEW_PRIVILEGES="yes"
PRIVATE_TMP="yes"
PRIVATE_DEVICES="yes"

# -----------------------------------------------------------------------------
# CONFIGURACIÓN DE MÉTRICAS
# -----------------------------------------------------------------------------

# Métricas a recolectar (true/false)
COLLECT_SYSTEM_INFO="true"         # uname, uptime, hostname
COLLECT_CPU_MEMORY="true"          # top, free, memoria/swap
COLLECT_DISK_INFO="true"           # df, lsblk, uso de disco
COLLECT_IO_STATS="true"            # iostat (requiere sysstat)
COLLECT_NETWORK_INFO="true"        # ss, puertos abiertos
COLLECT_DOCKER_INFO="true"         # contenedores, imágenes, redes
COLLECT_PROCESS_INFO="true"        # procesos top por CPU/memoria
COLLECT_JOURNAL_INFO="true"        # uso de espacio en journal

# Número de muestras para iostat
IOSTAT_SAMPLES="3"
IOSTAT_INTERVAL="1"

# Número de procesos top a capturar
TOP_PROCESS_COUNT="20"

# -----------------------------------------------------------------------------
# CONFIGURACIÓN DE LOGS
# -----------------------------------------------------------------------------

# Formato de timestamp para logs
LOG_TIMESTAMP_FORMAT="%Y-%m-%dT%H:%M:%SZ"

# Retención de logs (días)
LOG_RETENTION_DAYS="30"

# Tamaño máximo de log por archivo (no implementado aún)
MAX_LOG_SIZE="10M"

# Compresión de logs antiguos (no implementado aún)  
COMPRESS_OLD_LOGS="false"

# -----------------------------------------------------------------------------
# CONFIGURACIÓN DE ALERTAS Y MONITOREO
# -----------------------------------------------------------------------------

# Habilitar alertas por email
ENABLE_EMAIL_ALERTS="false"
ALERT_EMAIL_RECIPIENT=""
ALERT_EMAIL_SUBJECT_PREFIX="[GOIO Metrics]"

# Umbrales para alertas
DISK_USAGE_THRESHOLD="90"          # % de uso de disco
MEMORY_USAGE_THRESHOLD="95"        # % de uso de memoria
LOAD_AVERAGE_THRESHOLD="5.0"       # Load average 1 minuto

# Webhook para alertas (Slack, Discord, etc.)
WEBHOOK_URL=""
WEBHOOK_ENABLED="false"

# -----------------------------------------------------------------------------
# CONFIGURACIÓN DE GITHUB ACTIONS
# -----------------------------------------------------------------------------

# Nombre del workflow
WORKFLOW_NAME="Deploy Metrics Alternative"

# Secret name para SSH key
SSH_KEY_SECRET_NAME="METRICS_SSH_KEY"

# Rama por defecto para ejecución
DEFAULT_BRANCH="main"

# Timeout para el workflow (minutos)
WORKFLOW_TIMEOUT="30"

# -----------------------------------------------------------------------------
# CONFIGURACIÓN DE DESARROLLO Y DEBUG
# -----------------------------------------------------------------------------

# Habilitar modo debug
DEBUG_MODE="false"

# Habilitar logs verbosos de SSH
DEBUG_SSH="false"

# Modo dry-run (no ejecutar cambios reales)
DRY_RUN="false"

# Directorio para backups locales
LOCAL_BACKUP_DIR="./backups"

# -----------------------------------------------------------------------------
# CONFIGURACIÓN AVANZADA
# -----------------------------------------------------------------------------

# Paralelización máxima para despliegues
MAX_PARALLEL_DEPLOYS="4"

# Timeout para operaciones rsync (segundos)
RSYNC_TIMEOUT="60"

# Opciones adicionales para rsync
RSYNC_EXTRA_OPTS="--compress --partial"

# Reintentos automáticos en caso de fallo
MAX_RETRY_ATTEMPTS="3"
RETRY_DELAY="5"

# Verificación post-despliegue
VERIFY_DEPLOYMENT="true"
VERIFICATION_TIMEOUT="30"

# -----------------------------------------------------------------------------
# CONFIGURACIÓN DE AMBIENTES
# -----------------------------------------------------------------------------

# Ambiente actual (development, staging, production)
ENVIRONMENT="development"

# Configuraciones específicas por ambiente
case "$ENVIRONMENT" in
    "development")
        LOG_RETENTION_DAYS="7"
        DEBUG_MODE="true"
        VERIFY_DEPLOYMENT="true"
        ;;
    "staging")
        LOG_RETENTION_DAYS="14"
        DEBUG_MODE="false"
        VERIFY_DEPLOYMENT="true"
        ;;
    "production")
        LOG_RETENTION_DAYS="30"
        DEBUG_MODE="false"
        VERIFY_DEPLOYMENT="true"
        ENABLE_EMAIL_ALERTS="true"
        ;;
esac

# -----------------------------------------------------------------------------
# VALIDACIÓN DE CONFIGURACIÓN
# -----------------------------------------------------------------------------

# Función para validar configuración
validate_config() {
    local errors=0
    
    # Verificar que hay al menos un servidor configurado
    if [[ ${#METRIC_SERVERS[@]} -eq 0 ]]; then
        echo "ERROR: No hay servidores configurados en METRIC_SERVERS"
        errors=$((errors + 1))
    fi
    
    # Verificar formato de servidores
    for server in "${METRIC_SERVERS[@]}"; do
        if [[ ! "$server" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:[a-zA-Z0-9_-]+:[0-9]+[mhd]?$ ]]; then
            echo "ERROR: Formato inválido para servidor: $server"
            echo "       Formato esperado: IP:HOSTNAME:DELAY"
            errors=$((errors + 1))
        fi
    done
    
    # Verificar thresholds
    if [[ $DISK_USAGE_THRESHOLD -lt 1 || $DISK_USAGE_THRESHOLD -gt 100 ]]; then
        echo "ERROR: DISK_USAGE_THRESHOLD debe estar entre 1 y 100"
        errors=$((errors + 1))
    fi
    
    if [[ $MEMORY_USAGE_THRESHOLD -lt 1 || $MEMORY_USAGE_THRESHOLD -gt 100 ]]; then
        echo "ERROR: MEMORY_USAGE_THRESHOLD debe estar entre 1 y 100"
        errors=$((errors + 1))
    fi
    
    # Verificar configuración de email si está habilitada
    if [[ "$ENABLE_EMAIL_ALERTS" == "true" && -z "$ALERT_EMAIL_RECIPIENT" ]]; then
        echo "ERROR: ALERT_EMAIL_RECIPIENT requerido cuando ENABLE_EMAIL_ALERTS=true"
        errors=$((errors + 1))
    fi
    
    return $errors
}

# -----------------------------------------------------------------------------
# FUNCIONES DE UTILIDAD
# -----------------------------------------------------------------------------

# Obtener lista de IPs únicamente
get_server_ips() {
    for server in "${METRIC_SERVERS[@]}"; do
        echo "$server" | cut -d: -f1
    done
}

# Obtener lista de hostnames únicamente  
get_server_hostnames() {
    for server in "${METRIC_SERVERS[@]}"; do
        echo "$server" | cut -d: -f2
    done
}

# Obtener delay para un servidor específico
get_server_delay() {
    local target_ip="$1"
    for server in "${METRIC_SERVERS[@]}"; do
        local ip=$(echo "$server" | cut -d: -f1)
        if [[ "$ip" == "$target_ip" ]]; then
            echo "$server" | cut -d: -f3
            return 0
        fi
    done
    echo "5m"  # Default delay
}

# Obtener hostname para una IP específica
get_server_hostname() {
    local target_ip="$1"
    for server in "${METRIC_SERVERS[@]}"; do
        local ip=$(echo "$server" | cut -d: -f1)
        if [[ "$ip" == "$target_ip" ]]; then
            echo "$server" | cut -d: -f2
            return 0
        fi
    done
    echo "unknown"  # Default hostname
}

# -----------------------------------------------------------------------------
# NOTAS DE CONFIGURACIÓN
# -----------------------------------------------------------------------------
#
# 1. SERVIDORES:
#    - Agregar nuevos servidores en METRIC_SERVERS
#    - Usar delays diferentes para distribuir carga
#    - Formato: "IP:HOSTNAME:DELAY" donde DELAY puede ser: 2m, 1h, etc.
#
# 2. SSH:
#    - Asegurar que la clave SSH esté instalada en todos los servidores
#    - Probar conectividad antes de ejecutar despliegues
#
# 3. MÉTRICAS:
#    - Deshabilitar métricas innecesarias para mejorar rendimiento
#    - iostat requiere paquete 'sysstat' instalado
#
# 4. LOGS:
#    - Ajustar LOG_RETENTION_DAYS según espacio disponible
#    - Considerar implementar rotación automática
#
# 5. ALERTAS:
#    - Configurar email/webhook para notificaciones críticas
#    - Ajustar umbrales según características de servidores
#
# =============================================================================