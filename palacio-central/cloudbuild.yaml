# üî± GOOGLE CLOUD BUILD - CI/CD AUTOM√ÅTICO
# Proyecto: Goio Imperios
# Trigger: Push a rama master o manual
# Free tier: 120 minutos build/d√≠a

steps:
  # ============================================
  # STEP 1: Build de la imagen Docker
  # ============================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/goio-repo/palacio-central:$COMMIT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/goio-repo/palacio-central:latest'
      - '-f'
      - 'Dockerfile.cloudrun'
      - '--build-arg'
      - 'NODE_ENV=production'
      - '.'
    timeout: 600s

  # ============================================
  # STEP 2: Push de la imagen a Artifact Registry
  # ============================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args:
      - 'push'
      - '--all-tags'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/goio-repo/palacio-central'
    waitFor: ['build-image']

  # ============================================
  # STEP 3: Deploy a Cloud Run
  # ============================================
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-cloud-run'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'palacio-central'
      - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/goio-repo/palacio-central:$COMMIT_SHA'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--cpu=1'
      - '--memory=512Mi'
      - '--min-instances=0'
      - '--max-instances=3'
      - '--timeout=300s'
      - '--concurrency=80'
      - '--set-env-vars=NODE_ENV=production,PORT=8080,LOG_LEVEL=info'
      - '--set-secrets=GEMINI_API_KEY=GEMINI_API_KEY:latest,SHOPIFY_ADMIN_TOKEN_PROD=SHOPIFY_ADMIN_TOKEN_PROD:latest,SHOPIFY_ADMIN_TOKEN_GLOBAL=SHOPIFY_ADMIN_TOKEN_GLOBAL:latest,META_ACCESS_TOKEN_GOLLOS=META_ACCESS_TOKEN_GOLLOS:latest,METRICS_TOKEN=METRICS_TOKEN:latest'
    waitFor: ['push-image']

  # ============================================
  # STEP 4: Verificar deployment exitoso
  # ============================================
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'verify-deployment'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe palacio-central --region=us-central1 --format='value(status.url)')
        echo "Service URL: $SERVICE_URL"
        
        # Test healthcheck
        curl -f "$SERVICE_URL/health" || exit 1
        
        echo "‚úÖ Deployment verificado exitosamente"
    waitFor: ['deploy-cloud-run']

# ============================================
# CONFIGURACI√ìN GLOBAL
# ============================================
timeout: 1200s  # 20 minutos m√°ximo

options:
  machineType: 'E2_HIGHCPU_8'  # M√°quina r√°pida para builds
  logging: CLOUD_LOGGING_ONLY
  
substitutions:
  _REGION: 'us-central1'
  _SERVICE_NAME: 'palacio-central'

# Im√°genes a almacenar en Artifact Registry
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/goio-repo/palacio-central:$COMMIT_SHA'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/goio-repo/palacio-central:latest'

# Tags para organizaci√≥n
tags:
  - 'goio-imperios'
  - 'palacio-central'
  - 'production'
