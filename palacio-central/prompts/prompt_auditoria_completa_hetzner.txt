# PROMPT MAESTRO: AUDITOR√çA COMPLETA INFRAESTRUCTURA HETZNER
# Para: Agente Especial de Investigaci√≥n de Sistemas
# Objetivo: Auditor√≠a exhaustiva del estado actual de servidores en Hetzner

## CONTEXTO IMPERIAL
Soy el Rey de 3 imperios digitales operando desde infraestructura Hetzner. Necesito una auditor√≠a completa del estado actual antes de planificar migraci√≥n adicional desde laptop local. Ya tengo 4 servidores activos con servicios parcialmente migrados.

## SERVIDORES OBJETIVO PARA AUDITOR√çA

### INVENTARIO CONOCIDO (desde consola Hetzner):
```
üñ•Ô∏è SERVIDORES ACTIVOS:
‚îú‚îÄ‚îÄ 3√ó CPX11 (2 vCPU/2GB RAM/40GB):
‚îÇ   ‚îú‚îÄ‚îÄ goio-store (ash-dc1, US-East, IP: 78.156.195.120)
‚îÇ   ‚îú‚îÄ‚îÄ eco-eterno (fsn1-dc14, EU-Central)  
‚îÇ   ‚îî‚îÄ‚îÄ gollos-server-1 (nbg1-dc3, EU-Central, IP: 91.98.114.207)
‚îÇ
‚îî‚îÄ‚îÄ 1√ó CCX33 (8 vCPU/32GB RAM/240GB):
    ‚îî‚îÄ‚îÄ ai-masterkernel (hel1-dc2, EU-Central, IP: 157.180.83.237)
```

## MISI√ìN CR√çTICA: AUDITOR√çA SSH COMPLETA

### ACCESO SSH DISPONIBLE:
- **Usuario**: root
- **Puerto**: 22 (verificar si cambiado)
- **Autenticaci√≥n**: SSH keys (metrics_deploy_key o similar)
- **IPs conocidas**: Ver inventario arriba

### COMANDOS DE AUDITOR√çA OBLIGATORIOS:

**1. INFORMACI√ìN B√ÅSICA DEL SISTEMA:**
```bash
# Identificaci√≥n del servidor
hostname
uname -a
lsb_release -a || cat /etc/os-release
uptime
date
```

**2. RECURSOS Y RENDIMIENTO:**
```bash
# CPU y memoria
nproc
free -h
cat /proc/meminfo | grep -E "(MemTotal|MemAvailable|SwapTotal)"
top -b -n1 | head -10
htop --version 2>/dev/null && echo "htop disponible"
```

**3. ALMACENAMIENTO Y ESPACIO:**
```bash
# Disco y particiones
df -h
lsblk
du -sh /var/lib/docker 2>/dev/null || echo "Docker no encontrado"
du -sh /var/log/* 2>/dev/null | sort -hr | head -10
```

**4. DOCKER STACK COMPLETO:**
```bash
# Estado de Docker
docker --version 2>/dev/null || echo "Docker no instalado"
docker-compose --version 2>/dev/null || echo "Docker Compose no instalado"
systemctl is-active docker 2>/dev/null || echo "Docker service no activo"

# Contenedores corriendo
docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}" 2>/dev/null

# Estad√≠sticas en vivo
docker stats --no-stream 2>/dev/null

# Uso de espacio Docker
docker system df -v 2>/dev/null

# Redes Docker
docker network ls 2>/dev/null

# Vol√∫menes Docker
docker volume ls 2>/dev/null
```

**5. SERVICIOS Y PUERTOS:**
```bash
# Servicios systemd activos
systemctl list-units --type=service --state=active | grep -E "(nginx|apache|postgres|redis|ollama|n8n)"

# Puertos abiertos
netstat -tlnp 2>/dev/null || ss -tlnp
```

**6. SEGURIDAD Y CONFIGURACI√ìN:**
```bash
# SSH configuraci√≥n
cat /etc/ssh/sshd_config | grep -E "(PasswordAuthentication|PermitRootLogin|PubkeyAuthentication|Port)"

# Firewall
ufw status 2>/dev/null || echo "UFW no configurado"
iptables -L 2>/dev/null | head -20

# Fail2ban
systemctl is-active fail2ban 2>/dev/null || echo "Fail2ban no activo"
```

**7. LOGS CR√çTICOS:**
```bash
# Tama√±o de logs
journalctl --disk-usage 2>/dev/null
du -sh /var/log/ 2>/dev/null

# Errores recientes
journalctl -p err --since "24 hours ago" --no-pager | tail -20 2>/dev/null
```

**8. OLLAMA Y AI (para ai-masterkernel):**
```bash
# Estado de Ollama
systemctl is-active ollama 2>/dev/null || echo "Ollama service no encontrado"
ps aux | grep ollama
curl -s http://localhost:11434/api/tags 2>/dev/null | head -20 || echo "Ollama API no responde"

# Modelos descargados
ls -la ~/.ollama/models/ 2>/dev/null || echo "Directorio modelos no encontrado"
```

### AN√ÅLISIS REQUERIDO POR SERVIDOR:

**PARA CADA SERVIDOR, PROPORCIONA:**

1. **Estado General**:
   - ‚úÖ/‚ùå Servidor accesible via SSH
   - ‚úÖ/‚ùå Sistema operativo actualizado
   - ‚úÖ/‚ùå Recursos suficientes (CPU/RAM/Disco)

2. **Docker Stack**:
   - ‚úÖ/‚ùå Docker instalado y funcionando
   - Lista de contenedores corriendo
   - Uso de recursos por contenedor
   - Problemas identificados

3. **Servicios Espec√≠ficos**:
   - **ai-masterkernel**: Estado de Ollama, modelos disponibles
   - **goio-store**: Servicios Shopify/e-commerce corriendo
   - **eco-eterno**: Servicios de contenido religioso
   - **gollos-server-1**: Servicios de broaster√≠a/WhatsApp

4. **Problemas Cr√≠ticos**:
   - Errores en logs
   - Servicios ca√≠dos
   - Espacio en disco bajo
   - Memoria/CPU saturada

5. **Oportunidades de Optimizaci√≥n**:
   - Contenedores innecesarios
   - Logs grandes para limpiar
   - Servicios duplicados
   - Rightsizing recomendado

### DELIVERABLES REQUERIDOS:

**REPORTE POR SERVIDOR**:
```
## SERVIDOR: [nombre]
**IP**: [IP]
**Estado**: ‚úÖ Operativo / ‚ùå Problemas
**Uptime**: [uptime]
**Recursos**: CPU: [%] | RAM: [used/total] | Disco: [used/total]

### Docker Stack:
- Contenedores activos: [n√∫mero]
- Servicios principales: [lista]
- Problemas: [si hay]

### Servicios Cr√≠ticos:
- [servicio]: ‚úÖ/‚ùå [estado]
- [servicio]: ‚úÖ/‚ùå [estado]

### Quick Wins Identificados:
- [optimizaci√≥n 1]
- [optimizaci√≥n 2]

### Pr√≥ximos Pasos:
- [acci√≥n requerida 1]
- [acci√≥n requerida 2]
```

**RESUMEN EJECUTIVO**:
- Estado general de la infraestructura
- Problemas cr√≠ticos que requieren atenci√≥n inmediata
- Servicios funcionando correctamente
- Capacidad disponible para nuevos servicios
- Recomendaciones de consolidaci√≥n/migraci√≥n

### METODOLOG√çA DE CONEXI√ìN:

**Si tienes acceso SSH directo:**
```bash
# Conectar a cada servidor
ssh -i ~/.ssh/metrics_deploy_key root@157.180.83.237  # ai-masterkernel
ssh -i ~/.ssh/metrics_deploy_key root@78.156.195.120  # goio-store
ssh -i ~/.ssh/metrics_deploy_key root@[IP_eco_eterno]  # eco-eterno
ssh -i ~/.ssh/metrics_deploy_key root@91.98.114.207   # gollos-server-1
```

**Si no tienes acceso directo:**
- Solicitar credenciales SSH al Rey
- Usar herramientas de gesti√≥n remota
- Coordinar acceso via Hetzner console

### URGENCIA: M√ÅXIMA PRIORIDAD
Esta auditor√≠a determinar√°:
1. ¬øQu√© servicios ya est√°n migrados?
2. ¬øQu√© falta por migrar desde laptop?
3. ¬øD√≥nde debe ir Ollama para el trabajo con VS Code remoto?
4. ¬øQu√© optimizaciones son necesarias antes de DiCloak?

### ENTREGABLES FINALES:
1. **Estado actual detallado** de cada servidor
2. **Mapa de servicios** corriendo en cada ubicaci√≥n
3. **Plan de consolidaci√≥n** para optimizar costos
4. **Roadmap de migraci√≥n** restante desde laptop
5. **Recomendaciones** para implementar VS Code + Ollama remoto

---
**REY**: Necesito esta auditor√≠a completa para tomar decisiones estrat√©gicas sobre la migraci√≥n final a Hetzner y implementaci√≥n de DiCloak. üëë